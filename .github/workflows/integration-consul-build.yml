name: Consul Integration Build
run-name: "Event: Tag ${{ github.event.client_payload.tag }} from ${{ github.event.client_payload.repo }}  #${{ github.run_number }}"

permissions:
  contents: write
  packages: write
  actions: read

on:
  repository_dispatch:
    types: [integration-consul-built]

env:
  EVENT_TAG: ${{ github.event.client_payload.tag }}
  EVENT_BASE_IMAGE: ${{ github.event.client_payload.base_image }}
  EVENT_OWNER: ${{ github.event.client_payload.owner }}
  EVENT_REPO: ${{ github.event.client_payload.repo }}
  BRANCH: "feature/consul-patched"

jobs:
  update-image-reference:
    runs-on: ubuntu-latest
    outputs:
      TARGET_BRANCH: ${{ steps.update_image.outputs.target_branch }}
    steps:
      - name: Check payload
        run: |
          echo "TAG=${{ env.EVENT_TAG }}"
          echo "BASE_IMAGE=${{ env.EVENT_BASE_IMAGE }}"
          echo "OWNER=${{ env.EVENT_OWNER }}"
          echo "REPO_NAME=${{ env.EVENT_REPO }}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Update image reference
        id: update_image
        run: |
          IMAGE=${{ env.EVENT_BASE_IMAGE }}
          BRANCH=${{ env.BRANCH }}
          echo "target_branch=${BRANCH}" >> "$GITHUB_OUTPUT"

          FILE="charts/helm/consul-service/values.yaml"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]qubership.com"
          git checkout -B "$BRANCH"

          echo "Updating Consul image to: $IMAGE"
          sed -i "0,/^  image: \".*\"/s|^  image: \".*\"|  image: \"$IMAGE\"|" "$FILE"

          echo "Diff:"
          git diff -- "$FILE"

          if git diff --quiet "$FILE"; then
            echo "No changes detected."
            exit 0
          fi

          git add "$FILE"
          git commit -m "[IBuild] Update Consul with [patched] image to $IMAGE"
          git push origin "$BRANCH" --force

  multiplatform_build:
    needs: update-image-reference
    strategy:
      fail-fast: false
      matrix:
        component:
          - name: qubership-consul-integration-tests
            file: integration-tests/docker/Dockerfile
            context: ""
          - name: qubership-consul-disaster-recovery
            file: disaster-recovery/docker/Dockerfile
            context: disaster-recovery
          - name: qubership-consul-transfer
            file: docker-transfer/Dockerfile
            context: ""
          - name: qubership-consul-acl-configurator
            file: acl-configurator/consul-acl-configurator-operator/Dockerfile
            context: acl-configurator/consul-acl-configurator-operator
          - name: qubership-consul-rest-acl-configurator
            file: acl-configurator/rest-acl-configurator/Dockerfile
            context: acl-configurator/rest-acl-configurator
          - name: qubership-consul-backup-daemon
            file: backup-daemon/docker/Dockerfile
            context: backup-daemon
          - name: qubership-consul-remove-tokens
            file: remove-tokens/docker/Dockerfile
            context: remove-tokens
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${GITHUB_ACTOR}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Prepare Tag
        run: echo "TAG_NAME=$(echo ${TAG_NAME} | sed 's@refs/tags/@@;s@refs/heads/@@;s@/@_@g')" >> $GITHUB_ENV

      - name: Prepare Group
        run: echo "GITHUB_GROUP=${GITHUB_GROUP,,}" >> $GITHUB_ENV

      - name: Get package IDs for delete
        id: get-ids-for-delete
        uses: Netcracker/get-package-ids@v0.0.1
        with:
          component-name: ${{ matrix.component.name }}
          component-tag: ${{ env.EVENT_TAG }}
          access-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          no-cache: true
          context: ${{ matrix.component.context }}
          file: ${{ matrix.component.file }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
          tags: ghcr.io/${{ env.EVENT_OWNER }}/${{ matrix.component.name }}:${{ env.EVENT_TAG }}
          provenance: false

  # consul-pipeline:
  #   needs: update-image-reference
  #   uses: Netcracker/qubership-test-pipelines/.github/workflows/consul.yaml@d45ea797961a4886faeb675da5d75de90c2bd8c0
  #   with:
  #     service_branch: "${{ needs.update-image-reference.outputs.TARGET_BRANCH }}"
  #     versions_file: ".github/versions.yaml"
  #     pipeline_branch: "d45ea797961a4886faeb675da5d75de90c2bd8c0" #this value must match the value after '@' in 'uses'
  #   secrets:
  #     AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
  #     AWS_S3_ACCESS_KEY_SECRET: ${{ secrets.AWS_S3_ACCESS_KEY_SECRET }}
